Original Load Data Method

public void loadData() {
        try {
            File myFile = new File("/resources/Key Record Sample.xlsx");

            FileInputStream fis = new FileInputStream(myFile);

            //Finds the workbook instance for XLSX file
            XSSFWorkbook myWorkBook = new XSSFWorkbook(fis);

            //Return first sheet from the XLSX workbook
            XSSFSheet sheetOne = myWorkBook.getSheetAt(0);

            //Get iterator to move through all rows in the sheet
            Iterator<Row> rowIterator = sheetOne.iterator();

            //Traverse over the row of the XLSX file
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();

                //For each row iterate through the columns
                Iterator<Cell> cellIterator = row.cellIterator();
                while (cellIterator.hasNext()) {

                    Cell cell = cellIterator.next();

                    switch (cell.getCellType()) {
                        case STRING:
                            System.out.println(cell.getStringCellValue() + "\t");
                            break;
                        case NUMERIC:
                            System.out.println(cell.getNumericCellValue() + "\t");
                            break;
                        case BOOLEAN:
                            System.out.println(cell.getBooleanCellValue() + "\t");
                            break;
                        case _NONE:
                            System.out.println(cell.getStringCellValue() + "\t");
                            break;

                        default:
                    }

                }
                System.out.println("");
            }

        } catch (Exception e) {
            System.out.println(e);
            System.exit(1);
        }

        ________________________________________________________________________________________________________________
Original Load Data Method

public void loadData() {
        try {
            File myFile = new File("/resources/Key Record Sample.xlsx");

            FileInputStream fis = new FileInputStream(myFile);

            //Finds the workbook instance for XLSX file
            XSSFWorkbook myWorkBook = new XSSFWorkbook(fis);

            //Return first sheet from the XLSX workbook
            XSSFSheet sheetOne = myWorkBook.getSheetAt(0);

            //Get iterator to move through all rows in the sheet
            Iterator<Row> rowIterator = sheetOne.iterator();

            //Traverse over the row of the XLSX file
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();

                //For each row iterate through the columns
                Iterator<Cell> cellIterator = row.cellIterator();
                while (cellIterator.hasNext()) {

                    Cell cell = cellIterator.next();

                    switch (cell.getCellType()) {
                        case STRING:
                            System.out.println(cell.getStringCellValue() + "\t");
                            break;
                        case NUMERIC:
                            System.out.println(cell.getNumericCellValue() + "\t");
                            break;
                        case BOOLEAN:
                            System.out.println(cell.getBooleanCellValue() + "\t");
                            break;
                        case _NONE:
                            System.out.println(cell.getStringCellValue() + "\t");
                            break;

                        default:
                    }

                }
                System.out.println("");
            }

        } catch (Exception e) {
            System.out.println(e);
            System.exit(1);
        }
        }

        ________________________________________________________________________________________________________________

        2D Array Resource

        // Declare the 2D array list
        ArrayList<ArrayList<String>> aObject;

        // Create the 2D array list
        aObject = new ArrayList<ArrayList<String>>();

        // Add an element to the first dimension
        aObject.add(new ArrayList<String>());

        // Place a string in position [0,0]
        aObject.get(0).add(new String("Quarks"));

        // Display the string in position [0,0]
        println(aObject.get(0).get(0).toString());


        ________________________________________________________________________________________________________________

       String basePath = new File("").getAbsolutePath();
               System.out.println(basePath);
               String path = new File("src/main/resources/Key Records Sample.xlsx").getAbsolutePath();
               System.out.println(path);








 KeyFinderGUI KF = new KeyFinderGUI();
        KeyFinderGUI.setNimbusFeel();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KeyFinderGUI().setVisible(true);
            }
        });



        ________________________________________________________________________________________________________________


        switch (cell.getCellType()) {
                                case STRING:
                                    //System.out.println(cell.getStringCellValue() + "\t");
                                    if(org.apache.commons.lang3.StringUtils.isBlank(cell.getStringCellValue())) {
                                        fullRow += "[BLANK]" + "\t\t\t";
                                        spreadSheet.get(rowNum).add("[BLANK]");
                                    }else {
                                        fullRow += cell.getStringCellValue() + "\t\t\t";
                                        spreadSheet.get(rowNum).add(cell.getStringCellValue());
                                    }
                                    break;
                                case NUMERIC:
                                    //System.out.println(cell.getNumericCellValue() + "\t");
                                    fullRow += cell.getNumericCellValue() + "\t\t\t";
                                    spreadSheet.get(rowNum).add(String.valueOf(cell.getNumericCellValue()));
                                    break;
                                case BOOLEAN:
                                    //System.out.println(cell.getBooleanCellValue() + "\t");
                                    fullRow += cell.getBooleanCellValue() + "\t\t\t";
                                    spreadSheet.get(rowNum).add(String.valueOf(cell.getBooleanCellValue()));
                                    break;
                                case BLANK:
                                    //System.out.println("[BLANK]");
                                    fullRow += cell.getStringCellValue() + "\t\t";
                                    spreadSheet.get(rowNum).add("[BLANK]");
                                    break;
                                case _NONE:
                                    //System.out.println(cell.getStringCellValue() + "\t");
                                    fullRow += "[BLANK]" + "\t\t";
                                    spreadSheet.get(rowNum).add("[BLANK]");
                                    break;

                                default:
                                    fullRow += "[BLANK]" + "\t\t\t";
                                    spreadSheet.get(rowNum).add("[BLANK]");
                            }


                            null == cell ? "" : cell.toString()

                            ____________________________________________________________________________________________

                            public void loadData() {
                                    long startTime = System.nanoTime();

                                    /*
                                     * To Create an option to add an extra field we will need to have a boolean
                                     * to add an extra field, if wanted we can add an extra variable for the user to decide the field.
                                     */
                                    try {
                                        File myFile = new File(new File("src\\main\\resources\\Key Records Sample.xlsx").getAbsolutePath());

                                        FileInputStream fis = new FileInputStream(myFile);

                                        //Finds the workbook instance for XLSX file
                                        XSSFWorkbook myWorkBook = new XSSFWorkbook(fis);

                                        //Return first sheet from the XLSX workbook
                                        XSSFSheet sheetOne = myWorkBook.getSheetAt(1);

                                        //Get iterator to move through all rows in the sheet
                                        Iterator<Row> rowIterator = sheetOne.iterator();

                                        int numCol = (sheetOne.getRow(0).getLastCellNum());
                                        System.out.println(numCol);

                                        //Traverse over the row of the XLSX file
                                        int rowNum = 0;
                                        while (rowIterator.hasNext()) {
                                            Row row = rowIterator.next();

                                            spreadSheet.add(new ArrayList<String>());

                                            //For each row iterate through the columns
                                            Iterator<Cell> cellIterator = row.cellIterator();
                                            String fullRow = "";

                                            while (cellIterator.hasNext()) {
                                                Cell cell = cellIterator.next();
                                                cell.setCellType(CellType.STRING);

                                                if (org.apache.commons.lang3.StringUtils.isBlank(cell.getStringCellValue())) {
                                                    fullRow += "[BLANK]" + "\t\t\t";
                                                    spreadSheet.get(rowNum).add("[BLANK]");

                                                } else {

                                                    switch (cell.getCellType()) {
                                                        case STRING:
                                                            //System.out.println(cell.getStringCellValue() + "\t");
                                                            fullRow += cell.getStringCellValue() + "\t\t\t";
                                                            spreadSheet.get(rowNum).add(cell.getStringCellValue());
                                                            break;
                                                        case NUMERIC:
                                                            //System.out.println(cell.getNumericCellValue() + "\t");
                                                            fullRow += cell.getNumericCellValue() + "\t\t\t";
                                                            spreadSheet.get(rowNum).add(String.valueOf(cell.getNumericCellValue()));
                                                            break;
                                                        case BOOLEAN:
                                                            //System.out.println(cell.getBooleanCellValue() + "\t");
                                                            fullRow += cell.getBooleanCellValue() + "\t\t\t";
                                                            spreadSheet.get(rowNum).add(String.valueOf(cell.getBooleanCellValue()));
                                                            break;
                                                        case FORMULA:
                                                            break;
                            //                        case BLANK:
                            //                            //System.out.println("[BLANK]");
                            //                            fullRow += cell.getStringCellValue() + "\t\t";
                            //                            spreadSheet.get(rowNum).add("[BLANK]");
                            //                            break;
                            //                        case _NONE:
                            //                            //System.out.println(cell.getStringCellValue() + "\t");
                            //                            fullRow += "[BLANK]" + "\t\t";
                            //                            spreadSheet.get(rowNum).add("[BLANK]");
                            //                            break;
                            //
                            //                        case ERROR:
                            //                            break;
                                                        default:
                                                            fullRow += "[BLANK]" + "\t\t\t";
                                                            spreadSheet.get(rowNum).add("[BLANK]");
                                                    }
                                                    /*
                                                     * This is where we should put the "add extra field code"
                                                     */
                                                }
                                            }

                                            System.out.println(fullRow);
                                            rowNum++;
                                        }

                                    } catch (Exception e) {
                                        System.out.println("error" + e);
                                        System.exit(1);
                                    }




                                    public void loadData() {
                                            long startTime = System.nanoTime();

                                            /*
                                             * To Create an option to add an extra field we will need to have a boolean
                                             * to add an extra field, if wanted we can add an extra variable for the user to decide the field.
                                             */
                                            try {
                                                File myFile = new File(new File("src\\main\\resources\\Key Records Sample.xlsx").getAbsolutePath());

                                                FileInputStream fis = new FileInputStream(myFile);

                                                //Finds the workbook instance for XLSX file
                                                XSSFWorkbook myWorkBook = new XSSFWorkbook(fis);

                                                //Return first sheet from the XLSX workbook
                                                XSSFSheet sheet = myWorkBook.getSheetAt(1);

                                                //Get manually iterate through all rows in the sheet
                                                XSSFRow row;

                                                int totalNumCol = (sheet.getRow(0).getLastCellNum());
                                                System.out.println(totalNumCol);

                                                //Traverse over the row of the XLSX file
                                                int finalRowNum = sheet.getLastRowNum();

                                                for(int x = 0; x < finalRowNum; x++){
                                                    row = sheet.getRow(x);
                                                    spreadSheet.add(new ArrayList<String>());
                                                    String fullRow = "";


                                                    for(int y = 0; y < totalNumCol; y++) {
                                                        Cell cell = row.getCell(y);
                                                        cell.setCellType(CellType.STRING);

                                                        if(cell.getCellType() == CellType.BLANK){
                                                            spreadSheet.get(x).add("BLANK");
                                                            fullRow += "BLANK" + "\t\t\t";
                                                        } else {
                                                            spreadSheet.get(x).add(cell.getStringCellValue());
                                                            fullRow += cell + "\t\t\t";
                                                        }
                                                    }
                                                    System.out.println(fullRow);
                                                }



                                            } catch (Exception e) {
                                                System.out.println("error" + e);
                                                System.exit(1);
                                            }

                                            System.out.println((System.nanoTime() - startTime) / 1000000);
                                        }